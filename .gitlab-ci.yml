variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: wordpress_tests
  MYSQL_ROOT_PASSWORD: mysql

stages:
  - build
  - test
  - deploy

PHPunit:PHP5.3:MySQL:
  stage: test
  image: tetraweb/php:5.3
  services:
    - mysql:5.6
  before_script:
    # Install dependencies

    # update the docker
    - apt-get clean
    - apt-get -yqq update

    # instll the required packages for the running CI tests
    - apt-get -yqqf install zip unzip subversion mysql-client libmysqlclient-dev --fix-missing

    # PHP extensions
    - docker-php-ext-enable mbstring mcrypt mysqli pdo_mysql intl gd zip bz2

    # Set up WordPress tests
    - bash bin/install-wp-tests.sh wordpress_tests root mysql mysql latest true

    # Install PHPCS and WPCS
    - composer global require "squizlabs/php_codesniffer=*"
    - composer global require "wp-coding-standards/wpcs"
    - phpcs --config-set installed_paths $HOME/.composer/vendor/wp-coding-standards/wpcs
  script:
  - phpcs --standard=phpcs.ruleset.xml $(find . -name '*.php')
  - phpunit --configuration phpunit.xml.dist

PHPunit:PHP5.6:MySQL:
  stage: test
  image: tetraweb/php:5.6
  services:
    - mysql:5.6
  before_script:
    # Install dependencies

    # update the docker
    - apt-get clean
    - apt-get -yqq update

    # instll the required packages for the running CI tests
    - apt-get -yqqf install zip unzip subversion mysql-client libmysqlclient-dev --fix-missing

    # PHP extensions
    - docker-php-ext-enable mbstring mcrypt mysqli pdo_mysql intl gd zip bz2

    # Set up WordPress tests
    - bash bin/install-wp-tests.sh wordpress_tests root mysql mysql latest true

    # Install PHPCS and WPCS
    - composer global require "squizlabs/php_codesniffer=*"
    - composer global require "wp-coding-standards/wpcs"
    - phpcs --config-set installed_paths $HOME/.composer/vendor/wp-coding-standards/wpcs
  script:
  - phpcs --standard=phpcs.ruleset.xml $(find . -name '*.php')
  - phpunit --configuration phpunit.xml.dist

PHPunit:PHP7.1:MySQL:
  stage: test
  image: tetraweb/php:7.1
  services:
    - mysql:5.6
  before_script:
    # Install dependencies

    # update the docker
    - apt-get clean
    - apt-get -yqq update

    # instll the required packages for the running CI tests
    - apt-get -yqqf install zip unzip subversion mysql-client libmysqlclient-dev --fix-missing

    # PHP extensions
    - docker-php-ext-enable mbstring mcrypt mysqli pdo_mysql intl gd zip bz2

    # Set up WordPress tests
    - bash bin/install-wp-tests.sh wordpress_tests root mysql mysql latest true

    # Install PHPCS and WPCS
    - composer global require "squizlabs/php_codesniffer=*"
    - composer global require "wp-coding-standards/wpcs"
    - phpcs --config-set installed_paths $HOME/.composer/vendor/wp-coding-standards/wpcs
  script:
  - phpcs --standard=phpcs.ruleset.xml $(find . -name '*.php')
  - phpunit --configuration phpunit.xml.dist

build:
  stage: build
  image: tetraweb/php:7.1
  before_script:
    - npm install --silent
    - npm install --global gulp-cli
  script:
    - gulp production

stage_deploy:
  stage: deploy
  image: tetraweb/php:7.1
  cache:
    paths:
      - node_modules/
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$STAGING_PRIVATE_KEY")
    - apt-get install rsync
  script:
    - ssh -p22 fbndev@aries.uberspace.de "mkdir -p /var/www/virtual/fbndev/stable-version.florianbrinkmann.de/wp-content/themes/photographia"
    - ssh -p22 fbndev@aries.uberspace.de "mkdir -p /var/www/virtual/fbndev/trunk-version.florianbrinkmann.de/wp-content/themes/photographia"
    - rsync -rav -e ssh --exclude='.git/' --exclude=tests/ --exclude=bin/ --exclude='.gitignore' --exclude=assets/css/scss/ --exclude='.gitlab-ci.yml' --exclude=gulpfile.js --exclude=package.json --exclude=assets/css/photographia.css.map --delete-excluded ./ fbndev@aries.uberspace.de:/var/www/virtual/fbndev/trunk-version.florianbrinkmann.de/wp-content/themes/photographia
    - rsync -rav -e ssh --exclude='.git/' --exclude=tests/ --exclude=bin/ --exclude='.gitignore' --exclude=assets/css/scss/ --exclude='.gitlab-ci.yml' --exclude=gulpfile.js --exclude=package.json --exclude=assets/css/photographia.css.map --delete-excluded ./ fbndev@aries.uberspace.de:/var/www/virtual/fbndev/stable-version.florianbrinkmann.de/wp-content/themes/photographia
  environment:
    name: staging
  only:
    - staging

stage_production:
  stage: deploy
  image: tetraweb/php:7.1
  cache:
    paths:
      - node_modules/
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$STAGING_PRIVATE_KEY")
  script:
    - ssh -p22 fbndev@aries.uberspace.de "rm -rf /var/www/virtual/fbndev/trunk-version.florianbrinkmann.de/wp-content/themes/schlicht/*"
    - ssh -p22 fbndev@aries.uberspace.de "rm -rf /var/www/virtual/fbndev/stable-version.florianbrinkmann.de/wp-content/themes/schlicht/*"
    - scp -P22 -r [!.]* fbndev@aries.uberspace.de:/var/www/virtual/fbndev/trunk-version.florianbrinkmann.de/wp-content/themes/schlicht
    - scp -P22 -r [!.]* fbndev@aries.uberspace.de:/var/www/virtual/fbndev/stable-version.florianbrinkmann.de/wp-content/themes/schlicht
  environment:
    name: production
  only:
    - master
